
prototype(JohannesSteu.Neos.News:NewsList) >
prototype(JohannesSteu.Neos.News:NewsList) < prototype(Flowpack.Listable:ListNode) {
    @override.wrapClass = 'news-list-block'

    @override.listTitleClass = 'news-list-block__title'
    @override.archiveLinkClass = 'news-list-block__archive-link'

    prototype(Flowpack.Listable:Listable) {
        @context.listClass = 'news-list'
        @context.itemClass = 'news-list__item'

        @context.rootNode = ${q(node).property('rootNode') ? q(node).property('rootNode') : documentNode}
        @context.category = ${q(node).property('category') ? q(node).property('category') : documentNode}
        @context.respectImportant = ${q(node).property('respectImportant')}
        @context.queryType = ${q(node).property('mode') ? q(node).property('mode') : 'getAll'}

        collection.getByCategory {
            condition = ${queryType == 'getByCategory'}
            renderer = ${q(site).find('[instanceof JohannesSteu.Neos.News:News]').hasCategory(category).get()}
        }

        collection.getImportant {
            condition = ${queryType == 'getImportant'}
            renderer = ${q(site).find('[instanceof JohannesSteu.Neos.News:News]').filter('[important = TRUE]').get()}
        }

        collection.getFromRootNode {
            condition = ${queryType == 'getRootNode'}
            renderer = ${q(rootNode).find('[instanceof JohannesSteu.Neos.News:News]').get()}
        }

        collection.getAll.condition = ${queryType == 'getAll'}

        collection.@process.respectImportantNews = ${q(value).count() > 0 && q(value).removeImportantNews(respectImportant).get()}
    }

}

prototype(JohannesSteu.Neos.News:NewsShort) < prototype(TYPO3.Neos:Content) {
    templatePath = 'resource://JohannesSteu.Neos.News/Private/Templates/TypoScriptObjects/News.html'
    sectionName = "newsTeaser"

    title = ${q(node).property('title')}
    teaser = ${q(node).property('teaser')}
}

# Adjust cahces for pagination
root.@cache.entryIdentifier.pagination = ${request.pluginArguments.listable-paginate.currentPage}
prototype(TYPO3.Neos:Page).@cache.entryIdentifier.pagination = ${request.pluginArguments.listable-paginate.currentPage}
prototype(TYPO3.Neos:ContentCollection).@cache.entryIdentifier.pagination = ${request.pluginArguments.listable-paginate.currentPage}
prototype(Flowpack.Listable:ListNode).@cache.entryIdentifier.pagination = ${request.pluginArguments.listable-paginate.currentPage}